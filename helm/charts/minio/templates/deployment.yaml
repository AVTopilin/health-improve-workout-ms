apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "minio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "minio.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: minio
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: console
              containerPort: {{ .Values.service.consolePort }}
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.env.MINIO_ROOT_USER }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.env.MINIO_ROOT_PASSWORD }}
          command:
            - /bin/bash
            - -c
            - |
              minio server /data --console-address ":{{ .Values.service.consolePort }}" &
              sleep 10
              mc alias set myminio http://localhost:{{ .Values.service.port }} {{ .Values.env.MINIO_ROOT_USER }} {{ .Values.env.MINIO_ROOT_PASSWORD }}
              {{- range .Values.buckets }}
              mc mb myminio/{{ .name }} --ignore-existing
              {{- if eq .policy "public" }}
              mc policy set public myminio/{{ .name }}
              {{- end }}
              {{- end }}
              wait
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "minio.fullname" . }}-pvc
      {{- end }}
