# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Workout Backend –≤ Kubernetes

param(
    [string]$Namespace = "workout",
    [string]$ReleaseName = "workout-backend",
    [string]$ValuesFile = "values.yaml",
    [switch]$DryRun,
    [switch]$Uninstall
)

Write-Host "üöÄ Workout Backend Kubernetes Deployment Script" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Helm
try {
    $helmVersion = helm version --short
    Write-Host "‚úÖ Helm –Ω–∞–π–¥–µ–Ω: $helmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Helm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Helm 3.0+" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kubernetes
try {
    $kubectlContext = kubectl config current-context
    Write-Host "‚úÖ Kubernetes –∫–æ–Ω—Ç–µ–∫—Å—Ç: $kubectlContext" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kubernetes" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ namespace –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
Write-Host "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ namespace '$Namespace'..." -ForegroundColor Yellow
kubectl create namespace $Namespace --dry-run=client -o yaml | kubectl apply -f -

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Helm
Write-Host "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Helm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
helm dependency update

if ($Uninstall) {
    Write-Host "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ '$ReleaseName'..." -ForegroundColor Red
    helm uninstall $ReleaseName -n $Namespace
    Write-Host "‚úÖ –†–µ–ª–∏–∑ —É–¥–∞–ª–µ–Ω" -ForegroundColor Green
    exit 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ª–∏–∑–∞
$existingRelease = helm list -n $Namespace -q | Where-Object { $_ -eq $ReleaseName }

if ($existingRelease) {
    Write-Host "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ª–∏–∑–∞ '$ReleaseName'..." -ForegroundColor Yellow
    
    if ($DryRun) {
        helm upgrade $ReleaseName . -n $Namespace -f $ValuesFile --dry-run
        Write-Host "‚úÖ Dry run –∑–∞–≤–µ—Ä—à–µ–Ω" -ForegroundColor Green
    } else {
        helm upgrade $ReleaseName . -n $Namespace -f $ValuesFile
        Write-Host "‚úÖ –†–µ–ª–∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    }
} else {
    Write-Host "üÜï –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Ä–µ–ª–∏–∑–∞ '$ReleaseName'..." -ForegroundColor Yellow
    
    if ($DryRun) {
        helm install $ReleaseName . -n $Namespace -f $ValuesFile --dry-run
        Write-Host "‚úÖ Dry run –∑–∞–≤–µ—Ä—à–µ–Ω" -ForegroundColor Green
    } else {
        helm install $ReleaseName . -n $Namespace -f $ValuesFile
        Write-Host "‚úÖ –†–µ–ª–∏–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    }
}

if (-not $DryRun) {
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–æ–≤..." -ForegroundColor Yellow
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=workout-backend -n $Namespace --timeout=300s
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=postgresql -n $Namespace --timeout=300s
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ MinIO
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=minio -n $Namespace --timeout=300s
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Keycloak
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=keycloak -n $Namespace --timeout=300s
    
    Write-Host "‚úÖ –í—Å–µ –ø–æ–¥—ã –≥–æ—Ç–æ–≤—ã!" -ForegroundColor Green
    
    # –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞
    Write-Host "üìä –°—Ç–∞—Ç—É—Å —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:" -ForegroundColor Cyan
    kubectl get all -n $Namespace
    
    Write-Host "üîó –°–µ—Ä–≤–∏—Å—ã:" -ForegroundColor Cyan
    kubectl get services -n $Namespace
    
    Write-Host "üíæ PersistentVolumeClaims:" -ForegroundColor Cyan
    kubectl get pvc -n $Namespace
}

Write-Host "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host "–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor Cyan
Write-Host "kubectl port-forward -n $Namespace svc/$ReleaseName 8080:8080" -ForegroundColor White
